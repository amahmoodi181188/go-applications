name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarQube:
    name: Run SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin' 

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19' 

    - name: Install Dependencies
      run: |
        go mod tidy
        go mod vendor

    - name: Run SonarQube Analysis with Docker (App1)
      working-directory: ./app1
      run: |
        docker run --rm \
          -e SONAR_TOKEN=${{ secrets.SONAR_TOKEN }} \
          -e SONAR_HOST_URL=${{ secrets.SONAR_HOST_URL }} \
          -v "${{ github.workspace }}/app1:/usr/src" \
          sonarsource/sonar-scanner-cli \
          -Dsonar.projectKey=amahmoodi181188_go-applications-app1 \
          -Dsonar.sources=/usr/src \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.organization=amahmoodi181188

    - name: Run SonarQube Analysis with Docker (App2)
      working-directory: ./app2
      run: |
        docker run --rm \
          -e SONAR_TOKEN=${{ secrets.SONAR_TOKEN }} \
          -e SONAR_HOST_URL=${{ secrets.SONAR_HOST_URL }} \
          -v "${{ github.workspace }}/app2:/usr/src" \
          sonarsource/sonar-scanner-cli \
          -Dsonar.projectKey=amahmoodi181188_go-applications-app2 \
          -Dsonar.sources=/usr/src \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.organization=amahmoodi181188
